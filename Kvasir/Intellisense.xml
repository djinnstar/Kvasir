<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kvasir</name>
    </assembly>
    <members>
        <member name="T:Kvasir.Schema.DBType">
            <summary>
              An implementation-agnostic representation of a data type for a Field in a back-end database.
            </summary>
            <remarks>
              <para>
                A <see cref="T:Kvasir.Schema.DBType"/> instance represents the semantics of a data type without specifying the actual
                storage mechanism or data type metadata. These semantics are intentionally generalized, allowing for a
                single <see cref="T:Kvasir.Schema.DBType"/> to represent data types across a variety of back-end database providers.
                Because different providers may offer different restrictions on data types (such as precision for floating
                point numbers or maximum lengths for strings), these auxiliaries are excluded from the content of a
                <see cref="T:Kvasir.Schema.DBType"/>.
              </para>
              <para>
                Functionally, the <see cref="T:Kvasir.Schema.DBType"/> struct operates much like an enumeration, in that users are limited
                to the set of predefined instances that are accessed through the <c>DBType</c> pseduo-namespace. Unlike
                native enumerations, however, <see cref="T:Kvasir.Schema.DBType"/> instances cannot interoperate with numeric primitives
                and cannot be used directly in a <c>switch</c> statement (though they <i>can</i> be used in pattern
                matching expressions). Additionally, the <see cref="T:Kvasir.Schema.DBType"/> struct provides a series of member functions
                for executing various queries.
              </para>
              <para>
                One thing that is notably absent from the specification carried by a <see cref="T:Kvasir.Schema.DBType"/> is any indication
                of nullability. Within Kvasir, nullability is a feature of Fields, and is thus fully omitted from the
                <see cref="T:Kvasir.Schema.DBType"/> struct.
              </para>
            </remarks>
        </member>
        <member name="P:Kvasir.Schema.DBType.Boolean">
            <value>
              The representation of a Boolean value (i.e. <c>true</c>/<c>false</c>).
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.Character">
            <value>
              The representation of a single UTF-16 character point.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.Int8">
            <value>
              The representation of an <c>8</c>-bit signed integer.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.Int16">
            <value>
              The representation of a <c>16</c>-bit signed integer.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.Int32">
            <value>
              The representation of a <c>32</c>-bit signed integer.
            </value>
            <remarks>
              <see cref="P:Kvasir.Schema.DBType.Int32"/> is guaranteed to be equal to a default constructed <see cref="T:Kvasir.Schema.DBType"/> instance.
            </remarks>
        </member>
        <member name="P:Kvasir.Schema.DBType.Int64">
            <value>
              The representation of a <c>64</c>-bit signed integer.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.UInt8">
            <value>
              The representation of an <c>8</c>-bit unsigned integer.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.UInt16">
            <value>
              The representation of a <c>16</c>-bit unsigned integer.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.UInt32">
            <value>
              The representation of a <c>32</c>-bit unsigned integer.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.UInt64">
            <value>
              The representation of a <c>64</c>-bit unsigned integer.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.Single">
            <value>
              The representation of a single-precision floating point number.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.Double">
            <value>
              The representation of a double-precision floating point number.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.Decimal">
            <value>
              The representation of a decimal floating point number.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.DateTime">
            <value>
              The representation of a timestamp consisting of a calendar date and a time.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.Text">
            <value>
              The representation of a variable-length string of characters.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.Guid">
            <value>
              The representation of a globally unique identifier.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBType.Enumeration">
            <value>
              The representation of an enumeration, i.e. a restricted set of integral or string options.
            </value>
        </member>
        <member name="M:Kvasir.Schema.DBType.IsSupported(System.Type)">
            <summary>
              Determines if a particular CLR <see cref="T:System.Type"/> is supported by Kvasir.
            </summary>
            <param name="clrType">
              The CLR <see cref="T:System.Type"/>.
            </param>
            <returns>
              <see langword="true"/> if there is a <see cref="T:Kvasir.Schema.DBType"/> instance that matches the semantics of
              <paramref name="clrType"/>; otherwise, <see langword="false"/>.
            </returns>
            <seealso cref="M:Kvasir.Schema.DBType.Lookup(System.Type)"/>
        </member>
        <member name="M:Kvasir.Schema.DBType.Lookup(System.Type)">
            <summary>
              Looks up the <see cref="T:Kvasir.Schema.DBType"/> instance that matches the semantics of a particular CLR
              <see cref="T:System.Type"/>.
            </summary>
            <param name="clrType">
              The CLR <see cref="T:System.Type"/>.
            </param>
            <returns>
              The <see cref="T:Kvasir.Schema.DBType"/> instance that matches the semantics of <paramref name="clrType"/>. This is the
              <see cref="T:Kvasir.Schema.DBType"/> of a Field whose .NET source values are instances of <paramref name="clrType"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              If there is no <see cref="T:Kvasir.Schema.DBType"/> instance that matches the semantics of <paramref name="clrType"/>.
            </exception>
            <seealso cref="M:Kvasir.Schema.DBType.IsSupported(System.Type)"/>
        </member>
        <member name="M:Kvasir.Schema.DBType.IsValidValue(Kvasir.Schema.DBValue)">
            <summary>
              Determines if a particular <see cref="T:Kvasir.Schema.DBValue"/> would be a valid value for a Field whose data type is
              this <see cref="T:Kvasir.Schema.DBType"/>.
            </summary>
            <param name="value">
              The <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
            <returns>
              <see langword="true"/> if <paramref name="value"/> is <see cref="P:Kvasir.Schema.DBValue.NULL"/> or if this
              <see cref="T:Kvasir.Schema.DBType"/> matches the semantics of the type of datum wrapped by <paramref name="value"/>;
              otherwise, <see langword="false"/>.
            </returns>
            <remarks>
              <para>
                Within Kvasir, enums are represented as string values; this is the format by which the data is actually
                transacted with the back-end database. For this reason, a <see cref="T:Kvasir.Schema.DBValue"/> cannot actually wrap a
                CLR enumerator. As such, <see cref="M:Kvasir.Schema.DBType.IsValidValue(Kvasir.Schema.DBValue)"/> will return <see langword="true"/> if
                <paramref name="value"/> wraps a <see cref="T:System.String"/> and the current <see cref="T:Kvasir.Schema.DBType"/> is
                <i>either</i> <see cref="P:Kvasir.Schema.DBType.Text"/> or <see cref="P:Kvasir.Schema.DBType.Enumeration"/>. However, the <see cref="M:Kvasir.Schema.DBType.Lookup(System.Type)"/>
                method will <i>always</i> return <see cref="P:Kvasir.Schema.DBType.Text"/> when the input <see cref="T:System.Type"/> is
                <see cref="T:System.String"/>.
              </para>
              <para>
                Additionally, <see cref="M:Kvasir.Schema.DBType.IsValidValue(Kvasir.Schema.DBValue)"/> does not account for any restrictions on a particular
                realization of an abstract data type, such as range limits, valid enumerators, or nullability: just
                because <see cref="M:Kvasir.Schema.DBType.IsValidValue(Kvasir.Schema.DBValue)"/> returns <see langword="true"/> does not mean that the value
                can actually be stored in a Field whose data type is the current <see cref="T:Kvasir.Schema.DBType"/>.
              </para>
            </remarks>
        </member>
        <member name="M:Kvasir.Schema.DBType.Equals(Kvasir.Schema.DBType)">
            <summary>
              Determines whether this <see cref="T:Kvasir.Schema.DBType"/> is equal to another <see cref="T:Kvasir.Schema.DBType"/>.
            </summary>
            <param name="rhs">
              The <see cref="T:Kvasir.Schema.DBType"/> against which to compare this one for equality.
            </param>
            <returns>
              <see langword="true"/> if this <see cref="T:Kvasir.Schema.DBType"/> is equal to <paramref name="rhs"/>; otherwise,
              <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBType.Equals(System.Object)">
            <summary>
              Determines whether this <see cref="T:Kvasir.Schema.DBType"/> is equal to another <see cref="T:System.Object"/>.
            </summary>
            <param name="rhs">
              The <see cref="T:System.Object"/> against which to compare this one for equality.
            </param>
            <returns>
              <see langword="true"/> if <paramref name="rhs"/> is a <see cref="T:Kvasir.Schema.DBType"/> that is equal to this
              <see cref="T:Kvasir.Schema.DBType"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBType.GetHashCode">
            <summary>
              Produces the hash code for this <see cref="T:Kvasir.Schema.DBType"/>.
            </summary>
            <returns>
              A <c>32</c>-bit signed integer that is the hash code for this <see cref="T:Kvasir.Schema.DBType"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBType.op_Equality(Kvasir.Schema.DBType,Kvasir.Schema.DBType)">
            <summary>
              Determines if two <see cref="T:Kvasir.Schema.DBType">DBTypes</see> are equal.
            </summary>
            <param name="lhs">
              The first <see cref="T:Kvasir.Schema.DBType"/>.
            </param>
            <param name="rhs">
              The second <see cref="T:Kvasir.Schema.DBType"/>.
            </param>
            <returns>
              <see langword="true"/> if <paramref name="lhs"/> is equal to <paramref name="rhs"/>; otherwise,
              <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBType.op_Inequality(Kvasir.Schema.DBType,Kvasir.Schema.DBType)">
            <summary>
              Determiens if two <see cref="T:Kvasir.Schema.DBType">DBTypes</see> are not equal.
            </summary>
            <param name="lhs">
              The first <see cref="T:Kvasir.Schema.DBType"/>.
            </param>
            <param name="rhs">
              The second <see cref="T:Kvasir.Schema.DBType"/>.
            </param>
            <returns>
              <see langword="true"/> if <paramref name="lhs"/> is not equal to <paramref name="rhs"/>; otherwise,
              <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBType.#cctor">
            <summary>
              Initializes the static state of the <see cref="T:Kvasir.Schema.DBType"/> struct.
            </summary>
        </member>
        <member name="M:Kvasir.Schema.DBType.#ctor(System.Byte)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBType"/>.
            </summary>
            <param name="id">
              The identifier for the new <see cref="T:Kvasir.Schema.DBType"/>.
            </param>
            <pre>
              <paramref name="id"/> is in the range <c>[0, 16]</c>.
            </pre>
        </member>
        <member name="M:Kvasir.Schema.DBType.Normalize(System.Type)">
            <summary>
              Nomralizes a a CLR <see cref="T:System.Type"/> for internal lookup.
            </summary>
            <param name="clrType">
              The CLR <see cref="T:System.Type"/> to normalize.
            </param>
            <returns>
              The normalization of <paramref name="clrType"/>.
            </returns>
        </member>
        <member name="T:Kvasir.Schema.DBValue">
            <summary>
              A thin wrapper around a CLR object that can be stored in a back-end relational database.
            </summary>
            <remarks>
              <para>
                The <see cref="T:Kvasir.Schema.DBValue"/> class is intended to provide an abstraction over the generalized CLR
                <see  cref="T:System.Object"/> for use in contexts where compile-time type information is not available. The
                advantage to using a <see cref="T:Kvasir.Schema.DBValue"/> in APIs rather than <see cref="T:System.Object"/> is the guarantee that a
                <see cref="T:Kvasir.Schema.DBValue"/> only ever wraps an objec that can validly be stored into a database, whereas an
                <see cref="T:System.Object"/> could feasibly hold an object of any type. Additionally, the wrapped value is never
                a <see langword="null"/> reference: a sentinel value is used to indicate <see langword="null"/>, mitigating
                the need for verbose checks.
              </para>
              <para>
                The strong typing afforded by CLR <see cref="T:System.Enum">enums</see> is lost when the enumerator values are
                stored in a back-end relational database. Some providers afford value checking, either through an explicit
                <c>enum</c> data type or via <c>CHECK</c> constraints; however, even in these cases, the actual storage is
                generally an integer or a string. For this reason, an instance of <see cref="T:Kvasir.Schema.DBValue"/> will never wrap a
                CLR enumerator: it is the responsibility of the user to convert the CLR object into the corresponding
                database object, be it an integer or string or other supported type.
              </para>
              <para>
                The same general logic applies to any transformations applied between the CLR domain and the database
                domain. The <see cref="T:Kvasir.Schema.DBValue"/> class is intended to exactly wrap the object that is stored, and as such
                it is the responsibility of the user to apply any necessary transforms prior to creating the
                <see cref="T:Kvasir.Schema.DBValue"/> object.
              </para>
              <para>
                Because of the possibility that a <see cref="T:Kvasir.Schema.DBValue"/> instance wraps a sentinel indicating
                <see langword="null"/>, it is not strictly possible to determine the <see cref="T:Kvasir.Schema.DBType"/> of a particular
                instance. To check if a <see cref="T:Kvasir.Schema.DBValue"/> is valid for a Field of a particular <see cref="T:Kvasir.Schema.DBType"/>,
                use the <see cref="M:Kvasir.Schema.DBType.IsValidValue(Kvasir.Schema.DBValue)"/> query method.
              </para>
            </remarks>
        </member>
        <member name="P:Kvasir.Schema.DBValue.Datum">
            <value>
              The <see cref="T:System.Object"/> wrapped by this <see cref="T:Kvasir.Schema.DBValue"/>.
            </value>
        </member>
        <member name="P:Kvasir.Schema.DBValue.NULL">
            <value>
              A sentinel <see cref="T:Kvasir.Schema.DBValue"/> instance representing the CLR concept of <see langword="null"/>.
            </value>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.Boolean)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.Boolean"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.Byte)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.Byte"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.Byte"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.SByte)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.SByte"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.SByte"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.UInt16)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.UInt16"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.UInt16"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.Int16)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.Int16"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.Int16"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.UInt32)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.UInt32"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.Int32)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.Int32"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.UInt64)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.UInt64"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.UInt64"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.Int64)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.Int64"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.Int64"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.Single)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.Single"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.Single"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.Double)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.Double"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.Double"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.Decimal)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.Decimal"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.DateTime)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.DateTime"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.Char)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.Char"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.Char"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.String)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.String"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.String"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.Guid)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps a <see cref="T:System.Guid"/>.
            </summary>
            <param name="value">
              The <see cref="T:System.Guid"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
        </member>
        <member name="M:Kvasir.Schema.DBValue.Create(System.Object)">
            <summary>
              Creates a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps an <see cref="T:System.Object"/> whose compile-time type is not
              known.
            </summary>
            <param name="value">
              The <see cref="T:System.Object"/> to be wrapped by the new <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
            <exception cref="T:System.ArgumentException">
              if the CLR type of <paramref name="value"/> is not one for which there is an available strongly typed
              constructor, and <paramref name="value"/> cannot be implicitly converted to such a type.
            </exception>
        </member>
        <member name="M:Kvasir.Schema.DBValue.Equals(Kvasir.Schema.DBValue)">
            <summary>
              Determines whether this <see cref="T:Kvasir.Schema.DBValue"/> is equal to another <see cref="T:Kvasir.Schema.DBValue"/>.
            </summary>
            <param name="rhs">
              The <see cref="T:Kvasir.Schema.DBValue"/> against which to compare this one for equality.
            </param>
            <returns>
              <see langword="true"/> if this <see cref="T:Kvasir.Schema.DBValue"/> is equal to <paramref name="rhs"/>; otherwise,
              <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBValue.Equals(System.Object)">
            <summary>
              Determines whether this <see cref="T:Kvasir.Schema.DBValue"/> is equal to another <see cref="T:System.Object"/>.
            </summary>
            <param name="rhs">
              The <see cref="T:System.Object"/> against which to compare this one for equality.
            </param>
            <returns>
              <see langword="true"/> if <paramref name="rhs"/> is a <see cref="T:Kvasir.Schema.DBValue"/> that is equal to this
              <see cref="T:Kvasir.Schema.DBValue"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBValue.GetHashCode">
            <summary>
              Produces the hash code for this <see cref="T:Kvasir.Schema.DBValue"/>.
            </summary>
            <returns>
              A <c>32</c>-bit signed integer that is the hash code for this <see cref="T:Kvasir.Schema.DBValue"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBValue.ToString">
            <summary>
              Produces a string representation of this <see cref="T:Kvasir.Schema.DBValue"/>.
            </summary>
            <returns>
              A string representation of this <see cref="T:Kvasir.Schema.DBValue"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBValue.op_Equality(Kvasir.Schema.DBValue,Kvasir.Schema.DBValue)">
            <summary>
              Determines if two <see cref="T:Kvasir.Schema.DBValue">DBValues</see> are equal.
            </summary>
            <param name="lhs">
              The first <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
            <param name="rhs">
              The second <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
            <returns>
              <see langword="true"/> if <paramref name="lhs"/> is equal to <paramref name="rhs"/>; otherwise,
              <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBValue.op_Inequality(Kvasir.Schema.DBValue,Kvasir.Schema.DBValue)">
            <summary>
              Determiens if two <see cref="T:Kvasir.Schema.DBValue">DBValues</see> are not equal.
            </summary>
            <param name="lhs">
              The first <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
            <param name="rhs">
              The second <see cref="T:Kvasir.Schema.DBValue"/>.
            </param>
            <returns>
              <see langword="true"/> if <paramref name="lhs"/> is not equal to <paramref name="rhs"/>; otherwise,
              <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Kvasir.Schema.DBValue.#ctor(System.DBNull)">
            <summary>
              Constructs a new <see cref="T:Kvasir.Schema.DBValue"/> that wraps the <c>NULL</c> sentinel.
            </summary>
        </member>
    </members>
</doc>
